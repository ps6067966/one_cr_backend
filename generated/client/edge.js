
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  findSync
} = require('./runtime/edge')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.11.0
 * Query Engine version: 8fde8fef4033376662cad983758335009d522acb
 */
Prisma.prismaVersion = {
  client: "4.11.0",
  engine: "8fde8fef4033376662cad983758335009d522acb"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


const dirname = '/'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.BankAccountDetailsScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  full_name: 'full_name',
  email: 'email',
  upi_id: 'upi_id',
  paytm_number: 'paytm_number'
});

exports.Prisma.OpinionRewardTransactionScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id',
  purchase_id: 'purchase_id'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  user_name: 'user_name',
  full_name: 'full_name',
  email: 'email',
  photo_url: 'photo_url',
  mobile_number: 'mobile_number'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  BankAccountDetails: 'BankAccountDetails',
  OpinionRewardTransaction: 'OpinionRewardTransaction'
});

const compressedDMMF = 'N4IgJghgLhC2D2YCmAbEAuUSB2BXWAzhgNoC6ANCAsikesaNnEhiAKoFIBOIlYARgDlmGPChSUAZgEtUYOgxBNYLdCGlheIANbTsmtQQDGEFBB6VpBADJWoGSac6WCAJSQBHXNK5IDULlwkFzZsaS9VR1pg9QIASX9AmKt3CDAAeWwUAE8HJxiACwgCABEkR1wUKAA1UyCMAKDKKGyAB1UQOOx7PnKISvtMJRE1fqh4PSNfFW6tcwBzBVIAXxcAcRxuaD886JDWyCg/AEFBqM5VxhGQXE4uAH1lFkpdfVZjU3MtK1sCM/yXO4vD4duhGskCKFwvUwUkXAlds5YqkMllcuhzoVimUKlVaigYZjmm0OgBlAJ6ebfAgbbBbI4GImxNgHbZgU6IpCXYYqViSSooR4iF56AwgD5mCyxX7/PbIzzeXyJJrMsIRTnwxkA+VpTI5DUgIqlPoDfGE7UtdqsclcSnU2n00FMqwsw4nWUXchXXlqJCwCDSNAit6GEyS6kyg0pBUg5UQqHq2EqqwIjHa6O6tEGo04/p4uqRC0k60U7BU9abLhsqOQ1kMjlp6Lcp6sVoFeDje64LhBnSi95hr4uSONpHR4FKhpw1XQwtylNa+duJCZ/WjrHG3E1AsGy1k0vl2IOqsMmuutkNzHN64IfiBpCPfD8bhaV5iiVD6V2GtAxWg8EhGq5pLqmzrLqu6JMjmJr5gSc5InuJa2mW9qVtW677G67IelyXo8h0/AQNg2j3MgMCBkQwZivA/AAFZIEYPRfn8P4xpOGEzomYGgem4GomuUHYjB25wbuxZqAAQkR2jHEYRjwLg3RlORtBaL4ZhQNI8DYMIPogFJxGyfJilQMpAa0AAKvAHAvpQ6nQFp2AAGJcPAsBObIKDyCQFAgPZmnaVZHlyEsFZ0ieTq8ee9Y4deekBERBAQIxjmkUgKmUX2IYgDR9GMRG34ceOf6LmOkJAfBEI8UuKJ6pB2rQVuZqVcSVpqOkrR6I57gAO7mGAFlVtgSUpdpamoA52m6R0HVddpvX9YNiXJQF2BWTZUr+Y5LlucFXmhX5E2rUFnnefQvlWMe6FgdF7qcssvmtLa/pcNkADSSDomIEg3BVe1nWQlCKbOXTIAAHkgB2XWhp7rnFHQGTJckKUp6XmZlAjTaIApSKdCjeh0Givv2oafFKPyFWBv6xlOyblbONapgBOr8fVcqNXmIkwsziFqF0THIFuGAE6wYwTNgUx+jgTELEsqxHjDkVLrd2H3XhLZqLctlZdRdEMUxFMsUVy4TkrZUJsBZXVWVtVZhxHOmjuHG8+wdzjRpjlY5J0lGSjploxR61u3ZR3ba57l4yQNx3PcRO+VtgXwP9CjqJoF00orpXxnWd1w+r1xaw8RNUQOZMFUbVNsf+04uhVtNVVngIrqz9eUA7sGWzELv86h4XXVFOeq3nItqPy4hCryJek+Gw6U7x1PscztcM8b1sQrbAkNUJTVO0yLs2naYWOo3zKD5e+Tw6wfrmcT2UfuTNhzzVVdxoBK9L/EJ8Zi39vb5zzViTaiAA+KEj4RS/rWLC58mz5z0rgTqsdNBT3FIOB+I5K6m1fpxTumpWIQWzH/R2olnbiWAQeXux8zxn1irAjorQIDZCgLAR8sBnxSjfKXGezEcJN0wa3bBLVYhrybvg3+m5/67yLEAkBh5oZ91hjdah91HrPXMO9T62NxBAz+pHc62iQb6CQBDKGGd5Fm1wiPEAs0wjzSQH1LgA0hojVWloTGIxvq4xCiQSxxcdacM/IbHh8o+FJnjHXVeWDv51QIeIoh3Npzd1mL0IWQwNYgDFpMaY0s5hcEWD5eWcjKHGxVtAz0ljC6311nlA2j8K7zxfmecJ3EIEbzZkiduXNBEuw2u7SaOlrjWO6nYxaTiVqOSDtrBOzlw7JyjoXRBIB46h0TrM+gqdFlgP7srJRw98KsHmb4jh08Am1KCcVGmoS36Jg/sIlm0TLmGkIR3LppCe6bIUQPKBNDLFPUQLgRiCzkH33Lmck2JV+HLy4rxW5US7aCVic8wB+5kKyNMUUxRXy1Y/O7EYI0D5DkkxQWXWedTn4hI/hbQRC48E/3hbmOJLzpHkPeeYzCF5YoqOkC9dRX0ca/VnKswG/KIigyMZDHyLKs4PVauK868tjAFGvsLdQ2BWi4CgOkPWjELIkjoKAJ6Vh/TeL2WoDaAB1RVvguhqqYioGAyqCAKS4EYDoPT5byWGglPQUA9VUAgGDQQ+BVkeKoHoQNEcvHoG+vLGQkbFBpOOIIEo1IF6stiIG8QEB+AoCpaq9VOr2j4xAN0u4FruBIGteqrQTwCD0Jda2W0BAjWUBQPAEwLi1B6BtZq6pBbxUku+cW0h5rLUVrzUxGtda6GNubSAVt7bHKsC7eqnt+s+2ZUCfXB6l92quBTQ042GazDZtzTa9dxqS3cDLVa8d1bmC1uStOw1EAtDzr6Uu8dq7tW6pBVulYtDWCCHSBZfdISwJHqzTmqM47z30FAJerg16x02rvSoB99a1AGqbS+ltbb32ds/VqqA56B1YqHUAkd5bK0TvvVOhtz7X14Y7Sq7tRGSPcL/Tu9ZvDwWHoFJB09+af1wfIx0fmHkqja0nY++j2HGMLrGgR1jvaf2kd2Ykpib7mPArU1ef95SY4th4xc8D/GT3QbPcJxQ+8DwSaOFKaTGGQBYdnVpxdSmV1sdUxx9TpCZHyfw0Srhm64b6ZNSAMegojPBN46ZzN5miowas/BvztnAz2dQ5DOjmGZ04bnUx9zLHPMqcLb+3zTKUUBe06gsremuPX0DKB2LvEIMJedEl0rImbMors1J2jMmcsMdwwp7AH7lNru8yFq8eFuuH3yyN/xaCn4XDC2ktsHZ4Bdh7E1kzLWzNQcS5Zzr1nUs9fS31tD2XnO5aq4V5dGqvOld0xfGbp25tucU0Fk56CL6rZvDRe8LC2E7fYnF49B32tHdlSdirlJesOf605lzeWPujY8w9kr/afPTZS7D0B83As6ex79rjhFiJpQyiDtNVhWsHaXh16HuOEY+2RiZMyFF3Ae20vDzL6Gn1yeG4F+7X7iOTdOWRl2iNfZs4DrQJD1HedXeR7dz7wvHtY6my9pngGBQq7R19pbpKVtcYSsNMZ2kKfoypxA2nqh6dQ6LS7QZtj7GOOWqNbAnO+k88oI5/nrmCuq8I5jjd4vyszU6jYz3wyHFLTNx7+Xt7feI/9yjwP+u1ch9q1r0TOvxB68W9npsKw/t6Q2ukBx3AJLZDNdIKABQverQV5QD1fwqzet9f6ANQbdEAEZKCwDDT3yNAAGGNuj43XF8ec0He34sQ/TAzx3fn4BcA1ZXhHl2BvXaGwT5jOB8Dsc18Xrj8zosz+pwQW3FmhPHe12oUkq/1/IE31l7fyvBf77wLAI/Ye6sAdHgFAnmeBi12yXGv0O1v0Z1zwfyfwrxf0V3fxu0/0KwPx/zFx+xPwAJAAa17Avxt320E1FzvxgOATgI30QKR2QL31QO/1/0wON2wPW07G7DwLBTALKggMhygOX2kXIIQOTy3yoN31RyvjoIwOWy5FLw6FvEB2/2B2M1n3AMIJv2IOgP3n4Iuzf2EIFxoM+zQPoMkO3WwLJxIjIit0UMvy4MXwdwvVISl1Z1RgyngKrxrzrwb2WWwGb3wj51kwDwW3RxF0MKNykJN1GQ90twomtxrGsPnCXzsKAWd2j1dzj2cUchcK4Gr1r3r0b0cm8L9z8LTwCKKwxwmye2JxP2kNYEo18EpW8Nby9W6E739XDVWX71DR0mH32gwF73HzjR8SQVAKUM4JUMgLUN4LEyST0P1yJ2P0YIM24GAOiL43nyINgxh2RXe3T0L2eywMsVwOWLBwE1UPWPvzIUqxQM+1mL/xJyqNNTuAyKyPcOOHmHmF8HmD6XqO0jbwDCaOVS71aL7wHyHwjW6PQDH08TBMnz0mn3YOGIhFiLHHiK6xXzXwyMoNTwL19HEPKLmNCOwLP2FCGKsNGO4PGISLJE0Nf18MG10NEOxMPwkJCOMMsUiyWMsIINWJOOS1IMfzRIoMEO0MxMuP1wMKZI5Xq39Eaw5JiNJJsJ4IpOtCpIxMKKxJwJxI1xuL2PC2YM21YMOLn3BzWJ5I0P5IEJ8KV2oPpPVMZNxK1PmPC1kJzSB21nwNlK5LGNON5OVMFJpJ3zpO2IZPQLtIYPxMsXuGMimLdJWKNO5JIIQwAGE/ZHjsgXi3ikAPijh8iU9VSRSxtisyjNTQyWTwt7gIAAA3VFVNTk2Mz0k04dO4Y4SslMtM947YbMoQ4U6Y/M0o79EMowu4kAe4LvA05Qj0skr0hDAAWX9RbNeLbKzKTwtKQJEMDJKKCPFOUS42HL0FHJGPHPlPJJRIozuCnL0DnPTMzOQyrV9MtNXOKMz0LND2LMHPuAIHwD3IRLlLiNsOPNdTuFJHwAvIXOvJo07NzO7MCPV2fIHJLLSQ2lJFQSQ2yIKFbIzO2HiCXLtRfSGEdRxX/JfHdW+MaJ9X+JaK6LOhDUH06NBMooFD6KhMsUTWTRlJjOOLrPjIbO4EQrJmQuePnPQqOEwpQ1vJXIDIfODyfKLzKVIIQqQtHRQrQqvOEpvOXJ0P8KF0kr7KLMKnBDgoGT3VYqOLa0PMnK4q4B4slD4vryUowo7KFIgutMfO0pgqNj0sHKAxAyMsNPYonPrJPO4vkvLUUoEuUvsr9I/0gvXOgukosVkoAqCt8BCsvLsqXIKNpI0uY2cvJLU3cq41hOrPdNrL8s4qAX5mSpAoIB9zUq7Kcq0pyoqJko0zVOuJfNP0MyJOjOMoXx/IVL/KQkpAqsEshmqvSv9Myru3quCMHVm3x2tNatguwLZPPzhJJIPN6qPI2IGrLCGuUtGpzIyqKM0vGxctiu5FmsPHmpq12IdLSQOO8rHOKtMv8s2J2v4pSqEv2vAsOrVOyumolzezmrXIWuZMHN1K2zYMKrYpMo2rMrx3mF2owq+ocp+rzKgqzxurioupauusarDMdIB2dPkNdNWprN8uetKteoRvesquRoiqtLXL+s3PD22suuBtxrxO3UHIcMjP9gykTxEqoDRgdSdScx5r9nZ1UiIs9Xbz+KGABIoroCopBODXoshIBiYqTU/JcEROSGRK2u9kMkcL5vRgFtUrGsirqpOoas5teyAXFpl35tHXCrvPEuOoLNOtyqSH0r0nSEMuJLJphqRN/INv0hZ15sloIDNrApRvGqOqyqmuZryuwM8u1vTW/ODr6tDodqcNNudrSoOrjt+sTv7OZLtuZyNojtlyjvzsFotoZokutv+tCR9sJkGK6p8qDr1pDrOPE3O2pNdomqDybuZpx1ILeSipBolIJJjgKoPW6uNMptYD7skwHrEqHozxLp0rLt7qmKuuJTxtbr5CAJWqhoXrjPUMBvmDpsHvjsmpHtLpmqvpxoPs5sHPuoDqKvJthpetZpvvXrvuHo9ptvtKxufrRoNzOsHPgWkEBU/uhp6szs2rOJkX/vUsAc3ofu3qfvhpfuC1AaPswwYSYRdIfjPs7sQe7qzpQbS1XpVNRqiqZsfoBtwYganq3JnpJvIcevYvt2ofiu4FyO537voaLogaYewZYYIsQ1rvNsLstsZq3tcpwY6CPTwe+1gu5vDolurpTJQqEa8KXIaNltIvlvItoroHaOosBNHwYo1vCznrAwocXsvr4LNK0PpvvMCzFOYdC3asWMceax4a7ssH1pQZ9JqscrXJ8ckb8aWpPs6tJq/pCZKLhspPcbXvQbVJieUY4f2KlMhvnucYvomKVIydEYUeKJyagdPwQUCY4K/PWqQbSbKefw8dvuyY1NybiZ+WIeYWJrIaKeCcodCZ7u9PKdEqyYgeqcxsIeji4aGf3Kep/qXvuO4D0fcIMZdoAeLqwe6bqy0crp0advLTqKMeIpMeaO7wsZ6OBJoraLsaLTSXqfhJ1ozqoeQfHr3vZtfoIegdnvbqSYQZcdKb5m+eKPYZ6fCw/o7uGZBcVIf2ZUno5r+bmZzpNoog2ZstCs+POZlt+NMdAAVpufQCsZVt0QhIiwnwGLTpp3edGf4dNLacydquia6Zqc4aLkBe4aWe/uad/tgImciYYetJmcPsHOWsSZ5caeWf5dWbIKFfrq8a/1tNif/3yZvget5ZSfuxacFeZYqYbu8fZdmegbqe5cWZlb5Y+b1YVYNcmdZaqZNfFa43oUYX6afAWacbhZKYRbtfRIdaiaddVf2ZJ2wIjL9lpav3pdSYFbDqOcdvRiTJMmAuGu2amcYaUY5fDIrKrMtbeaaZtbjfRcjqbPmFTavPTcdfdt7JAbavDZHK1atZ1bCdIJLerpnLBgrfbILu+rEczb2ezdLOoqjd1oZc+cl20cTYojPOwG7cXLrvkaNYTsHdNe3PfNgFHZjd1eLandzookAtgHndAsNeVfvuAeboOa43bYyksvMGstQpxaEu8OwpFvwtYBvat2lp+I7zIuudVq0Q6JsbBOjXVqeeuGYq3cLfHdtc/YPcSqQERufd7djsqZrY3N8bHsnYTf3doDvZkeCppuGpUpjs8bdpXYvaTu9sHL9qg9laLflbg7w4Q6Q8hiraDfQ5iq9qCDmdTqbYLfo5g93Zw4xeY94oUqI7CpQ7I43p7Iw7VZz2w6RirtvZY8k9SsXb7bQ4o9rebuTppf4/Tug9jflfKvU8+pEcDZFcUdXcPvLuXvBcJxRfrYWK5bo+taE9M+6FY6qss+Ff7atso8w8U9eUc+q1+Zc/C0lcnngfPo4tcapp87QerZ0/k9DZgRoYuORYi8Wo1elNi+Kfi9BfOMGvM5Gr86VfI/Pd09HpC9Yey/wci7SRgbgdhe1ZGZM4S9ZqS4q6XbPaAZq+C4y95KRf3sa9y51L6dIfc5bbGYup67oas4C5s6C4U+G+xrYec80a4ySIWlj3CNWmjq0FfdwtFojzmmSJGXdxcW/ZIqueA7osA+scVs0RQEeeNQTS1sM7peM53fld25jzd3j0O9kdI46fEazdmfs/akjyGRSIO8ciO6W+0+q7S7K30/C1o+++jd+9bad1h5dyu+B8R9B9Paq4G7R+4/xrST44K59aK79YB/h+u5J6o2k/B4HdW/S6atISZ6J7SO0iR/85R4p6458wx+eYte9fa/hf6rBagGS449S7F9tt3s0x+fG9Bv8bc+x7Hc6+K5Xoy2R+XdR5V4Ieh86DC8K0hfVZ1NcjAH+SgFa6Bbi5Kq68RbO0W+F5N9F4xrs8y62Iha2616YJxTxWd+lYE48/179dQd660598wa57Oot/8025y5D9c5m7pxrjx/MoMcV+s8buT6h7OJqJPeN/66T8G7W556ATUfT814lJo4J8u/25Z+0ixY8K50McFuMYJfu5e9JbuYe7oEpdjUYocal6CZl99bl/9YFO96r7EJDaHea4Bez9l9Dr5PtaX/J9FOdbftdft8d4j/zaM8E5j/n534Db39k6DMvbDexWdXD5ebWsv7+/d4X/NMq/v5tODNr7U8C4wcOnrPwZ7z9y8G+J4jkU8Lsci+nHP3kfxb4Xc9uQPAXtgCQxnM++FzAfn+1H63MgOQ/XomBw+5T5p+DTKPrN0Zahd1eQfDPtPVc5n9pezbDrp/wN5W8riwfZvjt1b6oDUi5uOdlALcLYsPqeRPFj+zlpEtzGbREfkP3H7Usp+m/Oftvwia/8MGK/AAdzyAFwIN+uvbdnnzca781BnTVfmuyYIn8AUb/QOqwIMHpMjBfXffhoMf7ak1sYfYoPinIGvML+0fNgbH1UEOC/+YrI/uG15pKDwBodPnu32J7aRk23QY9nAOW7F8a+WguZmWUrJhC3exXSIWgIEFlt4h7PHZhD1s7BDwyjbUASwK35nFsh/Aj3J23yGadUOifOTmbya7XAdyo2PQbjzm689eBgPGoatFnb1C5GCfZfujSkpmDwyG7DIRTS/7VCEe2kQ9kMLB6FDOeyQmpsgKjx8D5h2AfDg+1srIdBaJ3UAHhWdTndNhfQ7YSAFu6XM8BQ/ZWvc10SgcqW/RcLJB06Ef9bBrAOYR3x2FqcRBlVBISL2r6U9/epBb4dEN+HidCO/w4joCKaFjDPa4vajjt39ptcKhygqob0OZ4QjdhEnGEVJwaEyd1BCIutrpWREp1gM0wlZrMKxH88BBuI6EY+w+pscChGbQLmsNL5gjaRUQ9AQyKSplcSOZPP/hI26YS8yBVIuVl/zM74ika8fRoaMOiqIDzeavdRobgYHhYDkng9/j4M+Hy8FuRvO/sSMVHjDQRzVRvho0z528/klgrUdYMqEjcUU+o9pisPZEgjVeDowPk53oF5MdSbgzgEwJn7ojwhAfN6jKIs5e9jBRQkvqaPAYNcLR3A7AhtATK+Ae22A/Fr+zMb/tHhfKZ7iSyeET97G6/RYqfQPQfw9evg6/qNw17xifRaSaLiAWjJlj9B3Q+rmNxrFQs7qBTZYk2K6HUDWx1YtUbWOuDg19SrFHsR8JbFU1VRa/f7HeCJqetBm5KGuDjwnF9ipx5owcR2OuCmFIiqkd4TqMnEfs92onAgMmJXBHBBAkMBkJkEQ7uEFIUADaHCIVEiiZx8UbYbuNDyR9vBVAidj0JQEXCfhZ47YJeL+B+AbxKFe8Y+NZEpdTeSotqoOQ2ihBcUDEbQH4CAkLtVK/fDMVIKzGRp7h+AqNGrWeGT9JeEohjlKI4EzEuBQ4nQcWKlaljlx5Y3USVyBp0Cm+NEjoPWO7GMTmxa41mtOImHQsuxY4nib2N/H9i2J7Y23mtnbAsFtsIkumExMPEe9PR4XdiVuL0hOkHwAzbiYpN4niT1xcYzcdJO3HSQPxZEzzl/yY7lRkJRgVCWAHQlIAQJ14ukBBPVRQTCRHPV0S0Im5pJTc6A8yfuJ/G2twR6ApCYqjsloSUxF4q8WBNcl3j3JdwJ8Y4JJHODjcCEu4LdC+LpjJBfqXCSBxzHks8JREgseB1okPASxzAygTYOUksS2akk4yXVypr/RboHUekI5EFGV8UpxoxESUKi4JMYuaI6qfaI25GSU+IY6+qdFantATwHU5KcKMh4utsCMLF3oV0yGx8qxDU8aR6LLAtSc4bU2ad8XmlGiXxgkmSRtghoWSr+2/TaV6PUlYcr6e0t0AdL6SdTDRuzaMX1LSRaTpuQUmqXxJUmsS7pUkpqX/Smn7SZpr046R9I5FLTLEO48wlET+kjT7Cx4yOq1Pin15IJdwZyX4GhlRjYZX064P5IEGBTyhw0jEVyP/HYiwp+0zGe2ESncBcZYAfGasLdGosMp3AcKShL8BZTxBd3W4XmMKkPDip4gd7iJlInIzKZZosaZyI0xPTtgL01aG9MjFsyfJloosRVPolVTvx/0gyfxI3HbSLqCso4ErLmnQSlesEk0UTL0hcSpZwYnafVOBmNT1uj08Gc9MhnKzWZ3kuCb5OuArSvxP3VcfrMBlOy1JIM12fDRNlIAzZR0i2fAOV6+yNZw42SXqXknkzdZKMiSc7KNluy5A009qXHM8kuiVuhM1FtgR+k6T7Z60ysVlzbEuy6+zU92YrM9nmzi5bI0uezNaF6QEZ1dK6RWOzpozq63MyKWAAxm3isZjMrgMzO9mdz1Z6ovye+MRl7iM5Qcg8QDKsTcichHuEefZPHluSHxOM2KSzPjmJCEB1sjmVxiTHRSkAM5bANkGykSDCWeUgifhLuElSFBks1eSuPXkhzLetAnOWdOAF0TBpQLccb/NtZp9ZZcM/qePEqm8ZwFwUuNlAvrmviOgAchiXpLEmQLbp4chudoLoSpzLpCkoMTXJul1yBxaC1gJXIXG6TSFMw4rigsoVrtOZXAW6HfOyBTl1UuLNMU/MH5CynuRUgqWLJIESzgFWs0BYHJ/lIL5WTCraXLLzleQC5h04aLPKSFdy/ZtsgaQ2NWn08yFE0gSTGKjnNzTZrcoucMPlHdTTpMCzsZq2/lKSN5ciwBUYqbn5yIZhc1RafKBHNCk5C8lORdNHH2L9JOCihfIpcVgy3FHsjxSrICEnTFpNsmQoTW0m0Lq5DCjaaEucXujjZJimOWYs8XtyYJvvC+fBKvmZSJYEUveTnA4WPyBZmY1+cLPqUiLiJhY8UakupHsCAFeC3OWVW6DRzY5+SixUSJhkaLk55U9kkEuwXILcF1vaiSzVDl9K8lMSkYVYviXlzWS2i/ucxKcVdKFFxiyJS3OiVqLz5vUtZUJLsVDTM50s2Magt2WuKlF7ilRUsssULTihpy86XJMKY6y15Mir/tspmXei5ldUhZYcq8XwieppI0ZYkrnHJLWEXrQMRTIdmjSbl4S+ZTkv6VPKhlBMkZQmMsTWTHJNSm4XUvfmCKRZwit7qIuhKcSNlJChFfosdmGKElV8YSfA0QV6yQlqk/5fdKf4ajzWdC2lWktrkcrOBAKkyXpDdYkMq5LK0ScHPZVAydlNi8RZstqnXzzxTk4+eBISlQBEYH4o5YnOKXbdsC1k3eVFNVUErcBRKgRT9FzEAdyVzSsqW3SVUbyJ6yKxlZrF0FSqsFMquNs6uYUKqtFcC7WQgulUQKplGS+Va6pwLMrGxwan5YwumXCquVLgguLyppWXLEV1y31RGvFUetYVi4oNZ6pDWyL41VEkVbcWvZDyMofM3hbUpwmNKrVQix7ratKmkD/VUWQNRQLTV0qkVma5UY7OBWPLdVVsk5d3PQVRrdFYArtRmrCVZLFFY8h5VDNBXPjVlI6/ZCmomVeqi1YazlRHMbkRL7lUSgdYupWWvKV1RDd1r9PXWFrflxanYiiqBVorFlg6opcOs0UdAKkbSyUcV0Ql0yJ5DMrVWZOXlX5j5T64EfPK3KHNlOxzdGMarnVugzV2El+cSvrWkrG14sylUultHJM2V3qyibepnU9KFeD6kFQUstnPqIVfisZVYKw1ZzJinS7dfgvOo0D+1C6kjQnKHXkaOJx9ANZIvP7fLsNm6oVSWsTW7rUV+y0xcRsGVeS55vizjb6DHVSKHFf8v5Qmp3VgM9l+6g5YetY1ny9VL6yFautgZUbgWVy7OeGt7XZKxNuSiTcsI7nqKwNGkuhFN0lUXK+NNGg2dAvw13LYNmmljZJpLl2aZNfjCDdLlw6nib51S/mYStrVIbZBlqtDQZ0vWxq/WPq6dW8vEUBiLkrKtzfLwZVpbW14y6NQWqS2Cq5V9GqhXJvOVgKY1/G69VupU0MazWhmzDQ8lc0mbDJLqvLY5vPXOaqtRWmrXGrq1CbVNXNctSJ3RlVKiInC7hU3ki3mrotlq2LTavi2wK21PGr5dIv63pLBNeG8zbOuUW+abNhS0DYFtFWjrKtCm4JaGu23HIGNqfNLJZvRUgafF+q/TZrDXUuaNt2WuqbluLJ3azsD2x9UepeWfTOtrYJzSksS2baStYcsrbcr3XebxNWmvzbZuOUcagto2yDdO1oAwb2Fk2+DblOJY2rFt2Yppc2rEUwlmtrvAVaHRS2ZLdtBG5jV7KB1xKT1r6/ZO6o+2KbbWtOszb9rV6M625yOo7c9r00UaqV3GnRRdsmUCbSt9W7pV5v21M7tN3i1KbVyTV6QMF62rnVdtl1DbbtE0gXeYsO2kbjtL2sXQZoy1eDWt6a0zbDrvVx8Ad1moUSzpB2nrnM4O3NY6qU03qbt8u+HYrsF3G62NZGtKaEQ2Fw86RHufFbNoQ2E6SdyGutctrWwWCneRmrLW1vc0da3daqF/u4Mt3Vw+tX25TXrvK3zM81Ha63ZOoCpcBHJzMjVZPOIxLzq6T21XUN3Sk8DqZke1aDBuj3VqotiGhbYQLi0UqEtnOy7V5zo1y6gFlG5renpt20aftbOnLNaNT2z7qtRen3ZA2n10I/RHgvlZ2up0GLDZLCjvecJpkCCq1mEnAbHukHx7idosptZ/OHEp789dojPaHMX070+1RGpHUHp03sbQ9czHPbijz1Gaqd7Srbbrp2187v9ju3/c7uGX2bTt7OuFRXs+3v7XYXMn9QfP6GpRANM85nYgZO1lrsCoUi/eUp5kI6K+IALCQTtv0P779ZKpPa0sh1faedduzzQ50I1wGDtCBrFUge5WazX91GjA+wan13q+6PBpXULpN0i60dyB5fQ7xtFe7ZVMO8Q5wdE0abEdvBrqcDrLnZ7d9wh4zfPsz09qYDFmrQ1ZvgO6GXd+hg1ZYjINR7wteOmPXQfymNrGDqGkfYoI/XkSOln+83W6oCZr7C9oh3Db7u30NoV9RhufVXva1mGl9zmQw2nvX0YHi90B+w5jy3m4HtIuO++VwpgAza+9c2gfUTqH1LbvDye6I2AbWmH76Vx++3fdssOPbCD/B4g+rp3257/RNRvRXUe7WpbzDe2+ddIb/0q7wVgBkvKfoj08jyDtkypW6Ai3FGb97hpWg0qQ3MGKdKhnDZPpL1w75ehugZaMbBXWKI1morYxPoCNSMuDBxjFVJoC1m7ZN12ao5TtqMQHodlxwFQ7uaOA7ldxx5dYkeAOv8XjvRt4+Quu1b7Gj/27407psNEGHj6O7Aob21i0Hn5cehg+Ufj0bH0FXgJwOcYok7GMjr2lVHif8MNGQsYovSNgA7BdASTyW8IxCfJPkjLEVQWk/PzEO7G/VHQSTKyZp30mbegh64PMBqRS6N1+Jj4woZABCnJdvG9AyYZy1knQdagKk8KZlPa6LjCpwY/X2A29K5RmKtWe0fb3YE4+XvFE/wrKPWrMTlR/2TiZXlj7pdtW8E/yY6MfoeTR+jzWHgpMdBlTNJ3w5ZIG2OnZlnp1gCyd9PXS3TWexI9ydDMDzwzCRok0KddP1H3TbuqU4mf6N063dHqciMNDTNTqMziRv4OYB9QoVcztu9Q4qfVLyASz0ZrZZvqdO3V/syAUsx0AACKQQV6FOUQAgFVZorQ/hWeVPNnTDAxowhb2ZnGmDRPZ6TfCavaGqK16MAvn51NOCzzTDa1Y6Tqf0wlPxqp0Ynwz/nWShek5+46LquNqAG+yZxIzTg7BhDdzsHOcxRAPOxK4Tx5wFWeYjNa9w9hPGYx7gXMmnr9bhutZ4bXOP6XhzzLc1rp3O59apjhkHmz1+NLrWdX+l2K+bjOBH00V5+2TebjbQXWeN6OC8etd0jmziyF4c++dKXcBYhzLavPsOoNLmLVMgjE5GmIF2qW1Dqms7VJv6L9DzxrUwZyZQMSLpT4F+04wv8HLLAhfZt3XbNYNpGRLzyo0UEIrOa74VB+0E+E0VaPnpm4lgE0QsCV2nRTwltS6JbkuaWiTNCz3WxccUyW9TvZni0gLItcA8hQg6i/jtRP0GwSZLFDZYyxMYbBz+rW/lxZVaaD1hdluoY5afY0W/zLllYwQItOMWvLnaYExOr6Ool7BhlkwYFciNBH+LPl7/s6JR0BWJjXGSS7pavX6WUrsltKwVeWnybtzQlvwQZfKsaWbLFZkcenOKvFaVB9Vqy2yyatu7TLChKS3KZysstZDD/NXYacsQbRBhoV5kc5bNNAkGLbluK9xgGtxHWmfl9S1FXktu7CSa2pS5XqSuGD1rqVxq+ld4uAEJd2Vjiz/w2vWXTrEaxS2gbVO/LLLdx7i3deavaXWr46+hSpfGZlWurwbd671aSUXq2rUOjq/9dev5WxrYeuy4sOmsgVZry5+azFcWtWnNj5lpTS9f81vWCrg5aUUyNpqLmIrc19E6ja8PMXyd2J3ALicxvc6+TsyiU7uTpvbGPjQZpU9SY6ErWDrC+jU2SJ46DkQz3N36zLLfOoWozwtz9XSYJMRGzrkplU4Jb0vS3xTApvSKmZZvqnzzRJgcxrbFN83ELpCAg1ACdHDXg9pu58xKYjYmRsrRtwvv/pD0w3UhubG28fKcitpoAdtsYycYrNvkPyut4rrbd1NQ2ADjt18iO39t+tA7EYm61OYtuq2Ogw5f1C7dAknzCN0d46/qenMkHLEMiE21oFovzaVzHl17ktYVC03JbfhyA2oY5MRrmbFdv01XbZtMnws3prm2DY32DbCTgwdm3OgVt7XZTq1j/frfFtHBLrdZxm/HdYAJmI77x4e48fVv12wzSZsW48azO/EwL/dp6/6agOy2I1hZtfFHXcJj3O7u9hS/oEPv15j7AZ0tc6bUDUABLm98fV/zbPcBOFXZvg5teMuoWdbi9mM8vZQsnmQAY5g8HndhNtGs7t9ocqEJnuh0o7E5mO0efkOT21A7Q5OwyHHO5XhdrewAakLKHt2MDwDz3vA4zs+yIH418LBtB/MGiC7pRu/QtYptk70NnaDe49YgvJhmJ5fFveMcdujndcc9hzUuivzoWBrmF+Vpw9aOZ247kc1Rnw61s4rwseK5MgjbTauHIrBE9y+o6Ws9HErIt5K0dYauf2eriRs4zA9UuQ2cb0NtvQQq42raH7rD2q9f2xt5XaCRjokw9at0D2eba1ziwg9xuh3amTWy6046wf/9KrvTbrRDvweDWrrmDka6E/8fBbjapbZsso8raqPSbblwCz0S0cJWfrUtxx51eDv6Ev7jxkx7/a2XBO4nW1zI2kmskhWX8VFsK0jboso3Vz2T9G6xfKfsXKnZtpwf485ZGHwD+TiG/o4Bt+OrHczIq99f5W6PDrPjkh91aBuJH3H2o9q2Y9GdFOD+rj1Cy120d5PK7BT8x84+KfbPHj2a0G9M+UvDP1n8zgx7dbxsY6QtJ4qaw09TJNP0nyNxi1k9JY5OgnhTixy46WdEmynUTwe0NY/v3P+n6yi66Y7+sbOAXJzoF6hZWdv7onPT+21s6RelP3tlz/a7M7sHwvjnmLsJ5NwidmWunFl/50S76cTPJjs5sbdXXhuvOnLHzlp18/oeeWOn3l2F0y0JchPqnwLjnbi88f4vvH11hZ4DYeekHsj2wii0sPzsk3PnmTjl+08ptMPlroLrx75dudjPLHOD/5sEb+dHP+XJTgR4odP57OZn1zuFzq82c0v9XrrZI7k6tcHORntrhF8S4SdTHPz281aA5eZfvOlj/5ogd86YuMPR9wrre3VeNdVPTXEpkF5G6fulW+Xsb05wiYcMyufh9T1wiy6DdqOQ3Krn51y/itGuU3vT0a7S+16DPXj1r3l+6+pcVuHX5g546W/rcmu03EpwE6AeddXPXXNz8V3c8WdSuM3ner8wMPPKpPUxV+nKfm5JYaOiBvznl3o7bepusXZrsvdW5BO1vl3A73V4C5JdVGlDq+1t7u7teNuUhYNJ1ye9iflv4nlbj82319eOQmXObwN9O74VKuzo87ud4u4pdY2qX7btd/G6FcimSr0bstxi/tcXu0Wd52gLXvVX0zsZ3AZp4Xbofk2gLS1yWNsGyt4qb5B8jyTIdvfe3NTFdTHaFp714fNVBHo4/BYItEmPUdIRiBXkck4fYPYW1Vcx+0iMfjbVHpKRI9IdSOGzekBj/rFY8MuTmtRCqFw+I81OBkmbiEfB5Tv16/11HhVzO4yceHC3+Yjcx0Cw+j2l3iReT+gMcn4e+PeFvQ9isAfYXcjFB0eSZ94/If+PsdpB5A5E9Mea9N87K9Z+wCOTOP2Abj6Z8c/mfbDln9d2577v2Olb8/bz5gKk9OfEHw7hR2x4o+qq69iHqeSh9odk22nhE9cyBeuB6e7HHjqN/P1w+qrAvXAaT/8YNv21kvtn+yfZ4b2qewHkjlz0J909cf9YzHzzwZ9I9PPI6vnmvZ18YgVeqvCF1C+F7E9keTxsXgxMF6fNtfYb0r0d0+5s9zGTVwEhD7+qQ+VfWXqH7L8Xdy/AWSJBXnr3+5ClGeBBjXlT2Z8I+QfsHKQi3t55S/bBRv8X1HQe4K/Df18LH3r18Mu9OGOPQ3/z/rDe/zfwHgn6x2oEm9/eYeK3nIxgNHRYC7vXt6r/I7SRfGqDLRvNxp8sahulrnACL8V6TeN3+HM53Fcl+wMOfp52pnH5+6AvfPtP+X4T2d81eivDa03gb5R6a+3eaP+FuwzV769JPh59Xjb0cDB8o+/j431e99+6+qqpv/X6uoN6TIg+Rv1Psb3R52etA7gRP1Z+DbOJGrtf3AHjzz6C+S/aPAv1C2ACsAw/zvxbeAPABzREQVbkDmgOlCK96+vtEkB30765sr2wv33hX8L4k9IBkffPizwIcgfwI3QQflTtBpzgS/w/IXyPyJvjac+Rf63qg4n4hfOfEvaSZ71T9N80+U7mXtE2SsZ8fzmfun1n4m4ccRCAfq0a7zt41+W+rPDfxyC9/F/q/3vumxb3M3C9y/sPsPzefD9lc3y/PAX7v+D9a+fe4ERvtfF5/b+5H5/Jvm72b6T8LfZ/HQa38YED/D/vfjvlcH74Afru3f+nu34xx99H+Xf7X1gLb7Z/bvDPo/n4bN5FQ9+Q7lbgkjnEX/P+IRt0bPy14Ceffk95L+2ADjoJ+U/ub78+oXuT7hYkhtCbWGNBoq5suyruh6qu4buFiE+2VuyZd2jxpkhSwUZLX5RevJjLYMmFZsgCSwMwLr6ouYLjgGn2vVgMDSArQPqDD+dAWQFu61vuWQaAHvjQFau/8jf5LeFPuJ7Qaovlj7peh8kzK0+77jWpZe5flp6V+J3iz7y++/mx5N+GXu/4O2EzhbxGqogWoESBu3tP5ABW/nf6y+HnsoEX+VkqoHj+wPpP5F+LfjAHIONwCv6x+UGhRAsgOvgAHvSEPn36DkO/vf5EBYHqV5X+zvmT6OBZ/jwEiGg1gf6++Agf357+FgcVz7mSPnF6GBuflC48qMfioHCBbgRAF2BGgebbABBvnV6Z+//pAEb+3gXn5yev/mFKiB+8tT4EGdPigGaeaAUd6YeNfqB5rOVMmfpd6jkHoHNeXgTP48OmItUGzGFSmL7be6gakEJe6QWkgD+ZgUP4JBjPKAHK+33p4H+WH/k27lIzgcP4F+HgWUE5+0wZ/6WIfgfEEP+fbm2zBBx/iRZW+qAO744elwbEGDk/gR0H6+XQdMareiPqcwpBUARH4GmUPk4GZBiwdF6gBpQXkFTBH3kMFvBPrgj7gBboGsG+OvfpUFl4dwIp4uSEwf+rk4gGqX6uWzQTl5M+igdX7mBZwQ3YQCKIdz5/q2qliH5BchoAYW8iEroHkh94pSHN61IQ96l6cwb95AhodCqqKyNgaD6aqzIRlD2BKfv8HPBNVsQFl8paMkFzePwcn5/BI2omKZShfhSEAa1dA0HSB/emX64hh3viEtKSgQsHEhS9omSMh6qIKHowwofKF0hZSpn56BZoRRAWhZDqKGmBnIYaF/2xoUD4q+tgSqGYhLIeCGIhMwcmo6+2Vt+p7BDenaG0ADoZD5zMJwar7UBkQWC7RB1/qEGu+twef6uhzEomEhBcjjL6xhwYVKFfBMoeUGDBRwRkEGhAQZ0EIYoId6FmEvobKGb+kIZWG1BuQdWE6qrIdw73udlqiFxS6IQj6thjQft5yBLQbqH2qd/u0HihgQdyFkh5Xpqq9hVIX6EbBj3pKFcyDIdOEN6s4bWFFhRgQGHCezoWOGK2E4UuHzBpsnyFq+a4U3pChbYTJ70epweWGvBCGK/5BAkYT4FzM36s9LiB64RlDqhTEDQ5ahDPvIF5eBIaOFEht4V9o8hXfmeE/CfYXWEVBDYeZSd+PYeeHmhl4Wj45h3HoP5phIERgZgRMcieGr+94h+FIR84ZoGbBPKkGHD+IYcb44GiEfaHIR0vqf42+N4S8Fe+DwcmG3+agOEH3Bh/lmH++EpmKH7hFYeZQPh1BusHER0Hl/6Ah6YcqpKhcITOHUREYbRGa+gDvSElBzYfhFyRtxh640hXrinTamadtQ7IBA4dqGJ6xbjgQ2mLDsT51+KoqxH/BddpJFOqDNgCo92rdtgEOR6kj3ZC2dkX/JsB9Zv8ES2nkfTakBPkXMzT2XIVZHZh67gvb+RrNtZFzMP9lFGa2PEaDKnmukZ7ZS+ikem7hYhDnDjE26nvT6vcFfgBF6h1NuXbxRDpjvbsBF5m3aYR0TuPaORzdmkjORw/ukb0B/Nr5FxhxhmC7NRFUUSZ+R1UZ1G1Rwmv8EhRpUdvbV2uARFEYRTEWkYDRw2k8HaQ2ZuZGe+00SfbdRqFvvbFmR9k1EzRDWvVjn21ZqFH/21wY8ZxRfUXwFdRQUaObHyGDqbb3e7YQ64eUukaA5IBuUU0F/hQ4QoFFRV8GZEuRgURPaQOtkadHs+/Afw5ORnNj9FN2AtlxgeRgMY/6824URKa9RU0YNbeRf0WxHy24MTFGDkkUTDHnBotif4SmJ0UjG0BrkcNqXRJft5wCiqURb4OBkDlbaEBRMXwFwON7rdFXhqFmkJ5s/EXeGG2rtu7Z6RzMaj50RltlMLD+TMTdECx6UZbbh2B0UhYpRQdppFshGVkOR4OOMSSGwOssenaDuhwfdFcYzMm7bwAHtjlEfur0flH/hx3p9G+g30cP56x0AI8H5UVUQzFAx1sb9F1RkMdgSNR0saQhOxEMW1HZWXsZjFQxk0eOECRQCH7HwxjgcNEqxRoZ7G8xtsdgTYxDsbDGsAocYlGQOhMUHFcxIcTHExRZMQyBOxVMdAEihCoZYhZRoYoTbEc1VD+E4hb0XiEfRI4RbE02tppHFuheZrzqVRV9uVGQsoMVAA+mHsWWY12HpvVHXA0MQnG4xLcRwYVmiMenEd219oNHBR7UUM6jxfceNESm8cVPHLRM8bNFcYa9noCLRvAUDHnRqMf8HrRF9gUDtxY0S1FuOe0ZtG9x8RkdHruacZzHTxHcYfGMaWpina52lMXLENud0WJHhk0DjfGAY6scQ6axEISWFpIqDiLFXRtDMAl7uokaXqJ2YMGg5+A10QcGgJ2sfS7p+GUH0G8+ankbGGR1cTqG1xLFjY4FavWvs6qxsZnfESmKLhCgiuicUPZhxUfji5Q0sRmdHbRpeuc49aLCakY1RK0UFF0uQgZgkiBNoSaH6B2IVFZHeBUWbF1xGrk3HMSKMTfZoxUztwmhGvCRvE7RVVudqYK5CVHFLxF8Vr6BOqani70J32v7FMEHuv1aFaOic3F6Jq0eBqPOwfkmzWBnofyFghGoSUa/hJse9GFRMiT1Cjo++sYmLxQvnH73m0oW/5ERBQcYHQ+e4fmrWJGYVYGrha/gYHQRxYTg7aBxQWMEOSoif0EiRkSdpEju3QWO69B2STgkt4BkbIFGR6xiZG/IR7jEY8J/UXwkvxl7l0Z76RiXQlBJQ5vmakWy3oUkfB8EZ4GVxEiW/LD6arhG4jxFCV8zOxs8WDQv6KRqokNJ6iRwlXubSSV5gmz8YomCBWRiMGA+vIS4mnhSSeIkAWpsUtZ+J5aAEntJEyfjzbJMFpJ6FhqCf6FgJp3sBEqJcSVBbLBJSev73JC4X7pw+vSTCErhr3vsGABaQR2EYJivpWor+AyeUmeJkicckmR0fmWEvJLrpcmoy2QdjqqRkwSklbhWgUUFopNkpklVhzfgpGt+YXjEmZa9SXwFlegKW4mbhIKWkm4pQiW4EAp4EQcnEpNMeQ61OlPjJE0puCTIEwpwyRUajJK2qQnjJuibfFdJKjP7rDGgel8lwJisTQkdRbCY0kbJr8QrrSpRurKl5JjyXP6GJACQwkpxqfpj4B6GqcClaxv8aS4SqkTnInsW7CXsb3qUhjKmmpaCdB6JOISdjpNh3Kayn9hFSQQnGRQqV/IjRyttnH86P+joYDB2KSRF1i1KnqmmJjCYalNGWPj8ZYpdKeam2K+XIGmz2caWppqpB6mGm5JWkdqlvqzCWvFqJ6ybPF/a2UQ6kmp4aSmkcJFiagYWREoYdESpgDkanqphxpqkFp6CQUnvBMIZClApz0Xgk+pXiTXE+JxCW9oSRZCcilip/3tckd+GKWIlsphcSAFzpa3gSkLpOSQiHfJisYV7nJqycMF/JY/oklEpESV2mLhUIY+7/JIicemYptKWalBWPSb2nbChKbem8pmoVXEjphCWOlU2URrUmWuvbiim2JF0QbqhpIxp2kKxctl27dGPboEmAZ4qa3GC+UqbmlgZTqQ8ndpWyYek/CsIdSlep7icsZHJ3idInjpsiaKk2JcMQanZp1xqBmOpNafemKxNSRa4wZFyTOn6p+MUlH2pCAXmlbpcqZBnLJMaQfEqpFabtLUZ1afmkQZtloqHkWoieGFvSgyQRmjpRGT+mZWIqdonTpZGZ0kIZqFsomqZAGSxmxpFGXMwKprCfvG2pkGZ9afKsSWpm1myqdMlcYfVg2kF6ryY4qmZEaiTIREgGj/6YZCnjfJpe6IZukSuzqQ+kTW1oZkm2hqoReHep/KWsYjJGAQGnWp9kVMmbxAzvArkp8yUqmLJisdplLiaWSZk2ZSWXlwWZqWU5ne6eWRok/I5mXukk+maQZmDk9meXqLwFKblkZZctm5mrQZMhmn1+q6WAHMpaqkp7iB/mSAloZLqZ2HOJqwQKHhZhEXhnBug+oRknJ/iSslVZk4VehhJj4UunyhTwWSkNZOWSYnYRB8jJlPhtIYeH9J42T6ERZyaXRkusrCu4GURJ2TWFnZ34dCkfpsKbNnwp3/gtmWRAjGwoLp+2WtmOhqqdUQhZlBi+kYhd2ZNl3pgWTumbZjmVZlSRUmTekg5UEeDlDZPyZgZsKPWXtkTZNEaeniZl8pJlfZnqUyGY58kZFlPZAqZab+p6WilmNpB4c2maZraQmnGpHaahnbpctllmP2H2emZ05nxgzntpGkd/GsxjxgqkLxcGRpnjxJHkhk+aKGbRkQ5ZmQEpfWpGdZnNZGhhxmJpMJtLnI5isXVlnxsQUJmTSVaUznq5LOa5nqRnmU+lYZyoTt5fh4GT/FBZFDoDmjywOT9kk5QydFmCpsWSwYdZYUQZkW88AarmIBYmTbmKxO1hEGKpTWWWmkxIGfrl85ITgLnrubOZF405nOWLmEWsBpxlS5AebHnUJ1Vo/Hrx4efrqp5fuVxkBZGubLkfK2ucGkF5jOdHlxOmeY4Fa5W0aVko5bachk0ZGeShHrurWXgZ9yOwSCEepisv1lHy5MdjmB5l2SNnw5BEVjlTZs7kXZ+p7uWMpU50ObpnqZrGVQmOB8eVtnFZqhrHEFZlWRzljx5ZtnoVZ72U2lJ5B+Ykb15Hqpvk6658XYnruvcpThZBjKXB4+ZW3vCHF5RubjnBZy4dek4ZakZBFzhU+bj6fps+Tp7cuMaQom2ZyWe2ob5MOc5mN5mWdGlWJsBSVlK5CltnmWZS+Yrl55HCUfmX5yBVvlmJliBflIFmBTanwFctvfkWEMaToE/5MUn1l+ZpSYbk8ZEmV/lHhOEXsl4R+aOpGHJMWnCkU5ekKcm+Au+SfmCRK2cJHcZWqZGlPJiKTpmwZembtmyR/+RuHW5tedI4A53+aFmiJE+cTnnZMuSwV25WBqGF/q2hbJmPZLuSSogFVfquqTpSKaQUbyr4b/lcFShfdkqF7eQ9LV62GSyl/5EIojmuFgsY4G7px+YnnmUegSYUHZsER4Xo5ihT4UAFSOR/klKeOcDlhFe3sOnPZCmUtbB55eVmn/ZmhoXnp5EhWeml66+UtGlpN+cBmV5vOeEWFpTKlok55pRTrmR5aea3kFFOOYfly5hWdTnBx8GcnmIZuRVXlVFUhZpIg2XCSWkLJ2BXanN5kuc0Xv5zBRWaUFSMtQVcp/eQwWSBQ+boUl5+hfBT258xo4WN6zhWDlvpHiaTmu55OXPmdOnuZMkNFkyTcYDFqaZTnQFJRWMVlFL8brk3Fv2VGESsiBfFkoF4xZCaVpTRaJktFI+fdboFCeV0Wi5Z+b0Uq5/Re8XPhTBLgUXFp+f3Hi5fRZUWwlUSVQDDFVqQrlkFqBSiXQlaJcPmqFaMfMWNxOJRvI0F66W+ErFxfgyC3FQVv+g5Q6qIOxDAyuEpkgAL9q9BaAZxXyCigHkFwB/APSJQCywxGYIUh5wufIX5huFusXxFiRqvivOeYesxCC+jLALolVHDxxWhSpa84qlPfPSU7p3YI6j1ZjxXwHl8Yfn4USxjgTACoSGMdkWDkBALoCtANpTVlcYO/ppASw88TW4dJazBZSoI/0AACi3+NbkCu3dsiLpwEBMzD3iUOMqgIYojPfa9g1pJGUWlTYIVZ8lPgIKUPEXABZAFArkD1A5IeSOyVilipQRzSlcRbMVu68pa4RFlXfFsxqlvjHpSalXANWWqlRJW4UBFBpavhFlQkXqUtZEANaWsBJMWVmYBDpU6VsZrvnYCTAHpVu5elqOfhz+lgZczmIuenKGUIqEZcyVQE0ZeZSxlXZvGVrkiZSSlXgKZfoAcKQpeki5IvifNkxp4ji2X+FkDhWWZEuQOREZl2pZszNlMpWWWtRORajlNlupbWWDFunu2VGle8TtlSloft8GllkhXcXxQvZeKWelIufKa2lXGPaVMBI5avljlfwBOVFls5adABlftkwWeudZcuW6Ze5X2gbl1eluU0AapHuWheelFxgQAYVieUilBZReWIlohbBZvlEFaXp3l1eFWXKlL5T+XXl6UfWWHh35TwrsVhRfqUClHZY+XLZBYeEliVrRYkZWlMFVOVwVwMQhXYESFY6X9liWTtFhlMbMRXiQZxNRYnlAeVRWFxXGG8QKQrQNXgMVZ5aKXMV3xbaxXl8lcCUVmXFQ+WXlT5a4RIcYggJUkpQlZ9ld8+wr5UuVxJf8H8AHlSQVyFy+TOW+l2FfOV4VUHujze0DZVhVyAOFZuwLl+FX+WsARQFwH44LFdXp8iv6tRbV5RHq2WQOSlShUtp67ppXVVXOQczTpBlW1CHhawK5DwI1eOkBrlahNblmVgWjRVLUooJSi2V+Zeq6FlQReCXelXZb+UupK5dODNVqgIeHkVqAJRXdV7KVyCHlY8hVCQCWZTmV5l55WckTVGcdIzTVfletVc0c1SqALVpFdIzLVO5cUR9Vf2ZtX8lfwNZL7V9lYdWLFeKQ+YzFHFYrHuVLgVjoEAIlUUahV7eQFVKc4KejAg1IVeBXiVctkYAAVgNaFqnVYNTeVoxVVdpXb5Q5chVY1hBeFiulGFY/lQ18HGTBzluFQHnBlnGHpUekq5VABRlQwJDWOJCxWNRxlq1fTVJlFwM9VplIOSTW0AFeLtXwAuZcKV2VTFZ9WFVwSa4Fy4pPFlXw1EagDXE1zNfzW8VMAvxVo1glSlUMpfNcDUq13fKJVw1ClfR5I1itW6k10slatlnVhcYOSY14BQOWl6dVXjXqVxweOXulyNSeJpVXkBlVBlprnlQ01tZHTUM1WtUrWZQrNduXs16NRtWDVR5ZNpvVItaNWWI41V9VP5ZtSWXml+5Y4EK1SddrUw12kN2WMmGpUHWm1Odb3zq16da57G1WdcHWo1Bta5Vu6NtRLVcG2NWkgO1ttTpWl6hNa7Um1UtQQAe1YAF7Wy157slWQxftdHzXVjNainJ1d1eHUa1PHLRVhWsdaeXx14WInUN1HPtrU/Vg2bKVEmmdavVp+2dbrU1lltf1Wa1bbGx7F1edRWaI1klYBXxhlKWx7V1adedXW10FfVU9Fa0cOWO1zpSPUpMY9UZXz1bHr1VrV5lXHHtV1ldkAL1jFWNUOV5JXub31MtYlWG1qFjvWOVwnMnVBVT7LDWP19mhDUT1+9c+VhimDQPW11iRhFXCFwRbV54pvdf3UINd7rEw4NFDcnVUNCVZTVxujgXlVzYu9dZLFVPnBfV11L9Z/WjlaMS3W71EBZvHf1HXL/Wn1eKW1VWVnVd1UkVRDY9XPmA1ayRDVFUBA2i1UDeLVTpdhbA3fVYhbw2aMl1TECSNTNabVT1EDEo19+m1ZSjWSAtdmVC171WLVCFR1V75wN5teIW/VctRzLGNlAKY24NwdRY1RUVjYAbc1ApRqigBTjVo0uNMaTF7wNbeRHVzMyDTA0XeXWefUzVQ9ZRm/JZuRCLpNR9X9lPBFdbvVxNHjYY1Em9dSg0JRgjUfEf1rdU3XXAHdflA95XWUw0U1QJVTUt0JeL41MlHNT1Xj1T/l5noCQTQmVAN8oWE1/A3nvY17VcdQdUxNxTaAEb1sCX9Vy2yTaMV8BkzQfWvlNdbHn0NZwjk3oCeTaXVP1W8UU2VNNIl1kP1RDWFVzMFTSk3RRTtTjVaVdTfjVpIjTZOU6OJid56tNmVTQ0dNvtd03+NAzfs0CCwzbuWjNT1VHVgAHCt55RNCddA1rNQMSU2p1VzRVVoxqzXUVguGzfg161oNds3g1J9VcmDNAgoc14tiTYU3X1pudCHbClzTQ3XNz9X2XPNDzc3W1NIjXbWKxbzZS2Xp2wt83e1abv81EV8jYZUXpWwj8KgtD1eC3KN3tHPXMiMLTM0fVczWc1ZCCzfE1AldLVxjot7OSIVAtVLT8IktWDcfUF1wrQBK5NmzWrWktnNaKGnNdzf9zKtpTRk2KxtzQi0mJojYOXMtuNYy1f1TVYK0tVpBNRaytNDSE2O2FlaA2dVkTXK3ONylR83TlSLZ42b175dvVCCnLSK0mt2LcFW519rUiKGthLcC0e46DaILpt+TR8Wk4kVTo3RVzEl81xV6Vcw3tNPtQS1/iRLR7g8tRDR00Sm7DQVWKtSwS01/CZcQSJHNVtSbj8NHrdU1zMwjR21smbLZdletvTSRX9NezTq0QiMjR1XZAXVdO3FgijRK1o6KjVFxqNs4P62QNcLdo22FZbW8kXNBjRm1ICALd62LVRrefoe4YrYFiBtEzjY0VQGzYLXC1i9bM0h5xmZ822ttyXJXmtZdelKXtq7T63Zt87UM1LcbNZY0btoTYOQFG76CZGFeN4iNUyJhwHlhRVzGTFXYRZTZKnel8ETh3gaU7YHWfZ97cxiPtODrUw6+yHSAL7ty9fC3ZZV+WI4gVZpSi1ktW8VDmRImHRw5ThU7gB3nVDZfh3ntFZgimBxDHfgVxsDhRhJ8dy6Udl95Unfq0FN0qAK0gd17TGWQdYddB29N51ex2qqx5TR2aNxwdADodpbVx2w5bBYsZ9tloYeGOSFndJ0GtNTUwElA8CCgDSA7aJqTWtVkixEIV4jYIiAtHQMcCSAkgPrB+ArgELXA13VYA1adwDccGphMcnSAod8rV+2NZwFTJV/tFtZZ2KdPnfwh+d6hTdFQdwTTB1Bt4kcsUJd7JWh1kNk1ajmX6dnX9kCdcnbG1LN3jW7or1JnfumfZNLQk0WtF1WmoB165bO25dpHYVjkdKQrUwLGk2qV3qu5Xa41YR0kdsAcK8Hbi0KdUYXV0qRY3ffIEd67i10edX6iBUbdjVcp3EdLsAF1BdjECF1hdK7cPnDdZ1C6WxdendrC0daSFt1Ot05c5U1dRbVl0cQOXWoDHdwXWAChdPUOF29NkXYk06dyxRo1L1rzUZ0Vdx1UeJ4pvehl3Ldhdd3WCdhbc+EfdTIF9171gTep0UVmnSD1f+VHXSDg9n7dD1uN+jXa2o9GJYEV4FujbeZw9N8nt3sZlJZQbw9b3XCVbBNhbIWmdFJUsXydrHV13pJeKZ4UNdZ7sQ3vmRHX11I9QNYN2fYV3bMyg9RwBwrE9xGVN009x7Tz309unS4aU9ERZLVA1Nndr0I9m7YPF6QmlU53MBrnRhScRMQf7Ho92oJj0/dp3X93ndEXeu1RdYzdgThBN4sr0RtpPRgZJBFPUb142wHYd0BN5jTj0rVePV12jdYPQA3htk3VD3TdUQbz0i98sWL24dWPabXC9jPZA5PdYnbT2oN69We06997iH2S9UjZPUR991Q+2FdT7cV2K9MdXH0ftKvYn1q93PXo3J1eRlNqFGhDbS2otWTZn3I99XbZ1Ld7PXR2Htz3apUB9yLX31sddvXKAO9gXb93/dgPZd219FHZ723djfXimwt4/Qq3bdfrNP2p9/Of33ddchYv0ndDICv0XdLlXL2H0CvXF25KXWbv2Q99qEn2Yt7yaapCd+Jc949ZOfUB0Hd5fWB1ctorVX3T1gHZHVbBhPU/0NtLiPH0Ht+/Vz1tdwA8m3oCHXaq2n9G2c8lIDi2Qek5tjfgz3f9KeSgPGtNQbQXH9MeZgMx9onRgXq9f8gX5waRA1CW/9q3bx2j9wfYAN9NeA+B0gtYA1H0QDywA/3QtYbc31ldrfRh3ID9bfgPFJWvet1MDGfd54G9cgyX10NJvR0Bm9znZb1CU1vUmHedEvVwO+tS/U73X9rvQG3r9I3Zv05opsnSB7tBnXv1Jd22dG2/toFXcn89Ag1009d81Ve03Vs6bAOLofAwV3u9ELRz3LFtgxD0NN4g6124DN7T0HL+jAyoPnpJA7e3d69Xf/3/BefbQPt9qTX4OC8xfUH0JOZfQYNJDsQ1zah1uPYEP49IQw333yYQ6h2RDR7VkNYWIIRNr5G02r32ddAgyuk5D3WawPVDD8vIOPGGQ2CUw92TTwMJ4KrV42INhHZwMztRlUYNX9LvUD1u9lQwTVb9NQyIMPd1wEMOdFIwyP7dDizaL1qt8/UiAX9y/YsNr9QQ1GH1YEMIjVHArgBADvtmw3pARAXJe/3pZvxVmrmAzAPZi7xt9UDEAAUo6hXBNVft3n93g/11qAgI2NAxRXGC8PZA9w48N2DaSHCN+99RS83DiXw3ajcAvw6HkmJUI8CMNVtxPoOzDpBPiOxBczMZUgCPJSg7/xkDR929dRQyEV+wfrd4PLD0feGzO28ffSNeDKnT4PelZbCyO8jbIwIPrsuFXSOFDJIwhiHsgo1GXCj2nQ2x124o54NXV4I4eGzsMo+uVyj0XcOxJ2XIxKNCt05P6gajPVVqNjNrCou1gNN/SaP8FnTkqNgjvIxCNqVBmVW7RYdo8xmY9AmbPGFW0aW6N68Hoy5kEMkpHYq+j+laqO05b9fdCusuBSGPGc/o+QWc0dmViXkuMY5fxxjeJUYTbktI5o3cjKow6PWdzI2FZWjCjWYOXD1jRyPpCeo8qMmNYYwhgCjhY6yMljKw+AnCxog0KjW6DI5KPmU0o/WNCjjY+yOlCio9mP6joHeZTqjPY7KN9jIow2y6jrYzmPVjeY59mdsxo8WOmV5g9d2Dk1FgvXUjUDpGyVj7YzyOh9DDdrUUWy42u2Tj8ozmwVjs48OOqdYfd3V1jMrQ2OrjpY6E3hsLYymO8MB40AN3jQNd2OPjvY8+NNjbQlLEfjCWB2MGjP46Fpjj/4xOOAT/YzqOIJe47KbgTI40ePB1S4+OOaj54+ZWup3dRaNyNvY9uO+IoExI01jNAuSMDOxE0OMzDEEwRoUT0LrY5RNxw/OOHj3RZCWxQQY/lwkTvnWRNAZL8QE5wM3EwaBpjHw4GPmJZLv1ZCTn3bxNsTyJRmMhCu49eNVjfjTJOw9ydSeOYT1o3BNTjl44eBSTKE7eNoTptQ+MgURY2ePaTF46WTvj1E/uO5jrE2pPa1f46ZNPjQJXf0JjCo1zb6TX44yNGT3ddBPOTAE65Nrj8vdOOITSk7ZMsT3475NA1GEzBNYTFkzhNcYfrSIPbjdMTLA2TyE95Odj2rSAMKeBY3FNaTQUy+NFduk0xM3jfI3sPSD2kCZPDUZk1aCmjwQ1ZNijGU+GVZTtE3O25TvIvgCnj9U9hMe9A455MtTbDpFM+THU6gMCC/k7VMuTkwz01ATekAgllTyk7NNRTY06QMTTRo5pMrjRUyD0Pu40x7j4Ty7Q2NETgxFJMY9qk/BXOjlEydNDTsY+dNOjw7cfwtuSE36N3Tno8NqOuLSYJM3TqY69MBjxZJmOKTXk3ZMrTvg1VM+e+UwFOwT20/BPgJnI+FOZTwM6NOgzYw366VkPU92bQzOk01M/NQMyNPZTq08kPPu3U5tPmTmM5ZPgJIE99OfjiM/jPIznUxNN6A6M8D0wzwEzOO4zKkwuPFDRSdpCxTkM/FNkziU9gSO9CwwD1Wj3JaAXQ+gM1TM/1d0y63rjnYRDNTThExLPLWp0/b2yzE7e5OMCro9LOkTnM+RMwj8TDC7wzL0/rN0ThszvnPToY2bPkZD0/CXtFi0/aP2TF03bNEFSY5JO6zPEzbON1Fs6WSmAvYGrML9Gs23Xy9rCjVNXkdUyATHTjswjN4z7U0nFZx2RS+EAUxMwVPFj0c1bO01bU6hO2zqFVzWsKk0xHNHTKs1ROjVc4xzPOz903nOQDGoh1Qxc7M8tNIzK+SCMXw3o8bMNzIk88UqpnEwHOez2Xb9PxjYk+VkOzmc/7XZzhk7JPLxrcxXLuz93X3MPInc+SMFzG02nNnjGcybPDTFcyDMuz1c4INQF9c/PMGTFU29MMabc4xOjz1M3HM5zEJXJPMkPczHOtTNM/HPNzhI8mX2zZeRfNgT488fN/T8k27PQqF6h3MDz6Y3fO4T+vYrNFzys1YUlun83rOVzcsyFOMCpcyYimz8C5rNDzwqTrNlzxI8/NVzLc2/OWzG87dPezO8/gtc1X/rqmBzJw8HP0TFqTmoez2CzRPXzpC6/PkLObPniwLXs2gshz9/WAuha4c4rLFz0C6rOHz3846PJxrs7XOGunC/3MkLIABIu7zMHpQ2pzfM9aPrzQC3IsIL9/VdMPzm843O0zLCxGNwwSi8nWFzgi1AuARMC0QtjzT88wt4LrCzXNCGyCxKhLTmPVotazmC0SQaLlcyfPXdmiVxOiLtixPM3zU8wQs8qlC4EtXzwSy/NGLB5eJOWpyY5EtbzTc/pkPTfC884rzqi+nMlz104wsRTySwYv2LsS9PNILuSygt6Lbi+gv/TRs+fPWLl8wUu4Lvi4gtnKAS3kuxzDS3YtNL2i1sERLbS4/NRLP84PPVL4TgksML5S1nNBLgyyAscTu02tNR6EC+YsTj6i/PNnTmi1Ut/zUizrx1LMs2ss8LHi4e6MZui8QvcLtC64KfTzi3ohML0S0UvsTkYxyMcL2y3AvbzNy7fMzL3rvTMe4Ai6bJCLliyIt9LFS3dMKLZC44vpaFy22PtL+i7gtArDi4IOzLhMwsIqLSs0ss5LRyzYsDLjo+4sYLTi2UsuL+S5Ct2LmK/9NwrJQ2YvfLFi+bF/L4y2isdL1y4SsbL2K6iv1L+K7SvrLd8825/pOK5ct4ri877NnLIBtBmMrX85MuOjXSwmPEr3M9gC8zSK1hPLL/yxMvorXuZIsMrMiwvM0LvK8/pPTjy3bhiLlCcCt7zz/PyutJWq7Is+Lv86AtKdbNeyUnlsq1Suj1aq0nP7zIBFQsKr4Y7cvGLNS+MrOrNK1MuiTwyy0u9zcqz9NyLoq1iv+KH88avSTwa2ascTM8wAuSqXq8ys+rXc16MmEROZlDeLzywvVlDkfRUMszb4vsULFGaykv+t2a9X1kdwU7wsOJ4fTaNgFCa5Ut7LoazPqCrTyykt0rbKwxOerKy+rNRrQy/Sv+yzKnWvALvq32s6pX04Gt2rPa9Mt3LIy/Qtzz46zsumrva+2ubLza9qvCrS1QEMjNxU0+3irHweLPCLYK8xPerGK6ysxrpS6uvCT9q5dM/IsyZyvgrqC88shrfq3ytAmF65GuLrU6+6tZ8Kq0fOOjJlYXT5dW6ztPGEtDb6hsl6rlw2VtntQlXlkBYCnC+IZTpJYf0uzoMScJtCrusI+TbSACwbcEPBuDEZTgxnKGlAFBl76g5JyVv2TZpQA4bQQCnCCwnMN8DDQOAAQB140gOWQsAg5DE5Sg1G9DjpIxgK4iQwRgIshcYCPnECOoPfNYBIAbG72DcbKcCiBISbkIPhQAp4JQAogSZLACKbymyADuA7QEZ0noKIFoCkg3ANICmA0gAABexxKwpYbMm1HAIbdc1HPRpH9C1a9gWuXS7NK7gJICwYwAHvN+orQJHj5lRLNuXoqxqJauo5WgMwHdgpgHxaZQMgPoCUovJbFvbVVIzu0RAUzY42jwyW0EA7VDje+0xbYAC9WDAVLPoD5b1q6mXhNqW7mXpbRWzzVZb0zYVtQtk2vFv1b98ieW7p0SRx7xdIAoV4cKQEXN3jdIAhxHsRsXdR3awInUWnUlJ5eEHdbg21YO3yfWyNstD6IACG9bzWyALwIQYW9rQDDFWFaiw9FSAKWVS7VPYht2QG6h4QIWwvXhbVYGgBqAphNrXizCWyvB1btjU325blKOVuNbT23ilvbuMFVvhNjW/ltbjpWxM2Zl2W39s81djcDu1buW1Nt1bSvU32tbNBuP5E9cO84b3yPW30ML1A2+ABDbSOzv1Aw3/hOmx9uO1jszb0O5Nvb9lfUtt9D1hctvgNTfWtvG+q6tAMQN226MD/1RO/ttgNh27I207O/dyAhb/rRduRbagPACgB0WxlucS4u/60vbL7RDtpbj2y+2gBX23Vv5boO2VspTgO+vhvtquxM2K7suzluig0O1DuTa/rfDtIdNgyINdbDW21s07/rZjte95u8/147MfgTvWDMA2DP8bJO1bvE77vsIOO7lO7Nuo7LuwHvLtIg/TsL+G28b43ie7SzvpIhYyIMc73FWoAJ7Ie8/1KdHYJahBbQwCmIGAQqD1C2go9mshiotw0gAIjWgHCOl7KwIINAAA'
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\91860\\Desktop\\Projects\\All Project\\one_cr_backend\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "..\\..\\.env",
    "schemaEnvPath": "..\\..\\.env"
  },
  "relativePath": "..\\..\\prisma",
  "clientVersion": "4.11.0",
  "engineVersion": "8fde8fef4033376662cad983758335009d522acb",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.dirname = dirname
config.document = dmmf

config.inlineSchema = 'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgPSAicHJpc21hLWNsaWVudC1qcyIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImRlbm8iXQogIG91dHB1dCA9ICIuLi9nZW5lcmF0ZWQvY2xpZW50Igp9CgpkYXRhc291cmNlIGRiIHsKICBwcm92aWRlciA9ICJwb3N0Z3Jlc3FsIgogIHVybCAgICAgID0gZW52KCJEQVRBQkFTRV9VUkwiKQp9Cgptb2RlbCBVc2VyIHsKICBpZCAgICAgICAgSW50ICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICB1c2VyX25hbWUgU3RyaW5nICAgQHVuaXF1ZQogIGZ1bGxfbmFtZSAgICAgIFN0cmluZwogIGVtYWlsICAgICBTdHJpbmcgICBAdW5pcXVlCiAgcGhvdG9fdXJsICBTdHJpbmcgCiAgbW9iaWxlX251bWJlciBTdHJpbmcKICBiYW5rX2RldGFpbHMgICAgICAgIEJhbmtBY2NvdW50RGV0YWlscz8KICB0cmFuc2FjdGlvbl9kZXRhaWxzICAgICAgIE9waW5pb25SZXdhcmRUcmFuc2FjdGlvbj8KfQoKbW9kZWwgQmFua0FjY291bnREZXRhaWxzIHsKICBpZCAgICAgICAgSW50ICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICB1c2VyICAgICBVc2VyPyAgICAgQHJlbGF0aW9uKGZpZWxkczogW3VzZXJfaWRdLCByZWZlcmVuY2VzOiBbaWRdKQogIHVzZXJfaWQgICBJbnQgICAgQHVuaXF1ZQogIGZ1bGxfbmFtZSAgICAgIFN0cmluZwogIGVtYWlsICAgICBTdHJpbmcgICBAdW5pcXVlCiAgdXBpX2lkICBTdHJpbmcgCiAgcGF5dG1fbnVtYmVyIFN0cmluZwp9CgovLyBUcmFuc2FjdGlvbiBtb2RlbAptb2RlbCBPcGluaW9uUmV3YXJkVHJhbnNhY3Rpb24gewogIGlkICAgICAgICBJbnQgICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIHVzZXIgICAgIFVzZXI/ICAgICBAcmVsYXRpb24oZmllbGRzOiBbdXNlcl9pZF0sIHJlZmVyZW5jZXM6IFtpZF0pCiAgdXNlcl9pZCAgIEludCAgICBAdW5pcXVlCiAgcHJvZHVjdF9pZCAgICAgIFN0cmluZwogIHB1cmNoYXNlX2lkICAgICBTdHJpbmcKfQo='
config.inlineSchemaHash = '8a1927c26ff7e140f114c542b086cf6f33d0b703e773ece10550b25becc4f7af'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL",
      "value": null
    }
  }
}

config.injectableEdgeEnv = {
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
}

config.edgeClientProtocol = "graphql";
if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

